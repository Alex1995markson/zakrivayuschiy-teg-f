Шаг 1. Настройка проекта
Откройте макет проекта «Закрывающий тег».
1. Скачайте из Figma необходимые изображения и SVG-файлы. Оптимизируйте их: задайте фавиконам нужные размеры и форматы, разложите всё по папкам проекта. Не скачивайте иконку с сердцем, её нужно использовать иначе.
2. Превратите SVG с изображением дискеты в symbol. Вам нужно будет использовать эту иконку так.
3.Добавьте в проект фавикон и иконку для смартфонов.

Шаг 2. Работа над статичной версией
  1. Включите и настройте шрифты

  В архиве два шрифта — PressStart2P и Inter. Шрифт Inter вариативный, к нему особое внимание.
  1.Опишите в файле fonts/fonts.css подключение обоих шрифтов. 
    Подключая вариативный Inter, перечислите те веса шрифта, которые используются в макете, в виде диапазона.
  2.Задайте две переменные с именами этих шрифтов в файле styles/variables.css. Одну — для основного шрифта Inter, 
    а другую — для акцентного PressStart2P.
  3.Основной шрифт можете смело применить к селектору .page, 
    сославшись на переменную. Только не забудьте указать альтернативный системный шрифт.
  4.Настройте вес вариативного шрифта. Удобно вынести в переменные 
    толщину основного текста карточки и толщину заголовка карточки.
  5.Основной вес шрифта применяйте к селектору .page через 
    font-variation-settings.
  6.Все переменные должны лежать только в файле variables.css.

  2. Доработайте шапку

    1.Секция резиновая по ширине, используйте clamp или относительные единицы,
    а на мобильном устройстве — растяните секцию на всю ширину. Для реализации этой ширины удобно внедрить дополнительный класс, а размер вынести в переменную.
    2.Другие резиновые элементы(Используйте clamp.):
    — логотип, +
    - заголовок, +
    - отступы в шапке. ??
    3.Чтобы браузер не воспринимал как 
    теги символы < и >, используйте HTML-мнемоники &lt; и &gt;. 

  3. Добавьте основной контент
    Рекомендуем сначала создать одну карточку:

    1.По ширине секции с контентом (карточек) тоже резиновые, 
      используйте clamp или относительные единицы, 
      а на мобильном устройстве — растяните их на всю ширину. 
      Как и в шапке, для реализации этой ширины удобно создать 
      дополнительный класс, а размер вынести в переменную.

      При @media (max-width: 375px) { } - ломается верстка 
      каротчек при задании класса ?? (нужно еще переделать)
      ??
    2. Иконку с сердцем поместите внутрь тега <button>. 
      Обратите внимание на комментарии в прекоде, там описано, 
      какие классы задать иконке. 
      Если класс будет не тот, лайкнуть иконку не получится.
    3.Содержимое кнопок Like и «Сохранить на память» поместите 
      в <span> с отдельным классом button__text. 
      Это поможет делать необходимые анимации.
    4.Для иконки внутри кнопки «Сохранить на память» 
      используйте тег use и опишите в SVG-файле symbol, 
      а вот иконку сердца придётся вставить в код инлайново. 
      Подробнее об этом в шаге с анимациями. На стадии вёрстки 
      лейаута просто вставьте туда нужную SVG-иконку, чтобы 
      прийти к неанимированному, похожему на макет результату.
      В Figma эта иконка лежит отдельно от остальных, 
      используйте её на этапе построения лейаута.


  4. Добавьте лейблы на карточки.
    Поверх каждой карточки должен появиться лейбл:
    
    1. Создайте обёртку для изображения. В этом контейнере будет 
    лежать изображение и текстовый элемент.
    2. Спозиционируйте лейбл.
    3.Добейтесь нужного визуального эффекта с помощью режима 
    смешивания hard-light.


  Шаг 3. Ваш контент (Вернуться позже)

  Шаг 4. Всплывающее окно
  Кнопка «Сохранить на память» должна вызывать модальное окно. 
  Реализуйте эту механику с помощью изученного в этом спринте
   элемент dialog. При вёрстке содержимого окна используйте 
   повторно изображение дискеты и стили кнопок во всем макете.

  Чтобы сверстать две колонки внутри модального окна, вы, 
  скорее всего, захотите изменить в нём значение display.
   Воздействие на display повлияет на возможности скрывать и 
   показывать модальное окно, ведь по умолчанию у 
   элемента dialog предустановленное значение display.
  Чтобы избежать этой проблемы, меняйте свойство display у 
  диалога только в состоянии opened. Не забудьте также 
  стилизовать задний слой у открытого модального окна.
   Для этого придуман псевдоэлемент backdrop. 
   Закрываться модальное окно должно по кнопке Ок.


  Шаг 5. Адаптивность
  Используйте медиазапрос для экранов меньше 375 px. 
  Должно хватить такого варианта: @media (width <= 375px).
  Скорректируйте правила для нужных элементов согласно макету. Стилей там переопределено совсем немного. Макет практически целиком резиновый.






  Шаг 3. Ваш контент
    Теперь сделайте восемь одинаковых карточек, 
    добавьте к ним нужные отступы и вставьте в 
    каждую тексты из макета.
    Время для творчества. Подберите картинки в каждую из восьми карточек и напишите немного личного 
    текста вместо текста: Место для .... Подумайте о том пути, 
    который уже прошли, о трудностях, с которыми справились. 
    Нам будет очень интересно прочитать ваши мысли. 
    Будет здорово, если вы поделитесь фотографиями из 
    личного архива или подберёте что-то по настроению на Unsplash 
    или Giphy. Не сдерживайте себя!
    Вместо лейблов внутри карточки подберите одно или два слова, 
    которыми можете охарактеризовать своё состояние в 
    каждой из описанных точек курса. 

    Пока просто оставим так и 
    затем поменяем по требованию на свои картинки


Доработка правок:

1. Контент страницы должен быть центрирован, 
   на промежуточных разрешениях контент не должно 
   терять центрирование.

Фоновый паттерн отображается не по макету

В проекте есть нарушения в отображении по макету:
  На 1440px есть нарушения в отображении по макету
  На 375px есть нарушения в отображении по макету
  Для более точного контроля отображения вёрстки рекомендуется использовать плагин PerfectPixel для браузера Chrome. Этот инструмент позволяет накладывать изображение макета поверх вёрстки в браузере, что значительно упрощает процесс выявления и исправления визуальных несоответствий. Для этого достаточно экспортировать весь макет из Figma в формате изображения и использовать его в качестве overlay-слоя при помощи плагина